apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: cert-manager-policy
  # namespace: cert-manager
spec:
  privileged: false # Don't allow privileged pods!
  # The rest fills in some required fields.
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
    - "*"
---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:  
  name: cert-manager-psp-privileged
  namespace: cert-manager
rules:
- apiGroups:
  - policy
  resourceNames:
  - cert-manager-policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name:  cert-manager-psp-privileged-role-binding
  namespace: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager-psp-privileged
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:serviceaccount:cert-manager:cert-manager
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:serviceaccount:cert-manager:cert-manager-cainjector
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:serviceaccount:cert-manager:cert-manager-webhook
