apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: rescon
  name: rescon
spec:
  replicas: 1
  selector:
    matchLabels:
      run: rescon
  strategy: {}
  template:
    metadata:
      labels:
        run: rescon
    spec:      
      containers:
        - name: rescon
          image: gcr.io/kubernetes-e2e-test-images/resource-consumer:1.5
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 250Mi
          ports:
          - containerPort: 8080
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000


---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: rescon
  name: rescon
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: rescon
---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: rescon
  labels:
    app: rescon
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: contour
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - secretName: rescon-https-secret
      hosts:
        - rescon.cluster-3.poc.yogendra.me
  rules:
    - host: rescon.cluster-3.poc.yogendra.me
      http:
        paths:
          - backend:
              serviceName: rescon
              servicePort: http

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: rescon
spec:
  maxReplicas: 10
  minReplicas: 1
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rescon
